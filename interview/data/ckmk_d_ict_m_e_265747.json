{"version":"1.0","dataSet":{"info":{"date":"20230116","occupation":"ICT","channel":"MOCK","place":"ONLINE","gender":"MALE","ageRange":"35-44","experience":"EXPERIENCED"},"question":{"raw":{"text":"면접자님 오브젯 어리엔테이션 프로그래밍에 대해서 설명 부탁드릴게요","wordCount":7},"emotion":[],"intent":[]},"answer":{"raw":{"text":"네 이거 오브젝트 오리엔테이션 프로그래밍이란 결국에는 우리 말로 풀어보자면 객체 지향 프로그램이라고 알고 있고요. 어 가장 대표적인 언어로는 어 씨 풀풀 씨 풀풀 십 플러스 플러스라고 하죠 시풀풀. 이 시풀풀 이랑 자바가 있습니다. 그래서 이 객체 지원 프로그램이 어 그 장단점을 뭐 간략하게 말씀드리자면 일단 상속이라는 개념이 있기 때문에 뭐 자료 분석이라든가 개발 시간을 단축하고 그리고 뭐 그런 굉장히 아 개념 자체가 이 개발 방법으로 자체가 굉장히 뭔가 표준화 되어 있다. 그 컴포넌트 단위로 표준화되어 있다 라고 볼 수가 있어요. 그런데 이제 이제 단점으로 보자면은 이러한 뭐 그 말 코드의 코딩의 그런 난이도가 굉장히 인제 상승한다는 단점이 있죠. 특히 이 상속 개념이기 때문에 이 다중 상속의 개념으로 들어가면 굉장히 복잡해지고 그리고 또 네이밍 그 하나의 그러한 변수마다 네이밍 하는 것도 굉장히 곤욕이죠. 근데 일단 이 객체 지향 이라고 어 이라는 이런 개념이 나왔을 때 이 이 개발 개발 쪽에서는 굉장히 큰 반향을 일으키지 않았나 싶습니다.","wordCount":145},"emotion":[],"intent":[{"text":"어 가장 대표적인 언어로는 어 씨 풀풀 씨 풀풀 십 플러스 플러스라고 하죠 시풀풀.","expression":"i_prg","category":"technology"}],"summary":{"text":"오브젝트 오리엔테이션 프로그래밍 중 객체 지향 프로그램은 상속 개념으로 인해 개발 방법 자체가 컴포넌트 단위로 표준화되어 있습니다. 하지만 말 코드의 코딩 난이도가 상승하고 다중 상속 개념으로 들어가면 복잡해지며 변수마다 네이밍도 곤욕입니다.","wordCount":31}}},"rawDataInfo":{"question":{"fileFormat":"wav","fileSize":281678,"duration":8800,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Male/Experienced/ckmk_q_ict_m_e_265747.wav"},"answer":{"fileFormat":"wav","fileSize":2819918,"duration":88120,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Male/Experienced/ckmk_a_ict_m_e_265747.wav"}}}