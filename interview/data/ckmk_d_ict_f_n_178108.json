{"version":"1.0","dataSet":{"info":{"date":"20230116","occupation":"ICT","channel":"MOCK","place":"ONLINE","gender":"FEMALE","ageRange":"-34","experience":"NEW"},"question":{"raw":{"text":"가장 효과적인 알고리즘과 가장 비효율적인 알고리즘은 무엇이라고 생각하시는지 각각 이유와 함께 말씀해 주시면 감사하겠습니다","wordCount":14},"emotion":[],"intent":[]},"answer":{"raw":{"text":"가장 효율적인 알고리즘은 아무래도 퀵 소트라고 생각을 합니다. 어 빠르기도 빠르고 또 어떤 데이터이든 정렬을 할 때 효율적으로 정렬이 된다고 생각을 합니다. 이 정렬을 할 시에 너무 자리 이동이 많으면은 아무래도 메모리 소모도 많고 또 프로그램 자체 용량이 커지면은 이 소트를 할 하는 거 만으로도 굉장히 컴퓨터 하드웨어에 부담이 될 때가 많은데 어 퀵 소트는 그런 면에서 참 좋은 알고리즘이라고 생각하고 그에 반해 비효율적이나 더블 비효율적인 알고리즘은 버블 소트라고 생각을 합니다. 아무래도 움직이는 횟수도 굉장히 많고 또 횟수가 많은 만큼 메모리도 많이 잡아먹을 테고 대용량 데이터 셋을 사용할 때 가능한 피하려고 합니다.","wordCount":92},"emotion":[],"intent":[{"text":"이 정렬을 할 시에 너무 자리 이동이 많으면은 아무래도 메모리 소모도 많고   또 프로그램 자체 용량이 커지면은 이 소트를 할 하는 거   만으로도 굉장히 컴퓨터 하드웨어에 부담이 될 때가 많은데 어 퀵 소트는   그런 면에서 참 좋은 알고리즘이라고 생각하고 그에 반해 비효율적이나 더블   비효율적인 알고리즘은 버블 소트라고 생각을 합니다.","expression":"i_prg","category":"technology"}],"summary":{"text":"가장 효율적인 알고리즘은 퀵 소트라고 생각합니다. 퀵 소트는 빠르고 효율적으로 정렬이 됩니다. 그에 반해 비효율적이나 더블 비효율적인 알고리즘은 버블 소트라고 생각합니다.","wordCount":21}}},"rawDataInfo":{"question":{"fileFormat":"wav","fileSize":396878,"duration":12400,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Female/New/ckmk_q_ict_f_n_178108.wav"},"answer":{"fileFormat":"wav","fileSize":1647118,"duration":51470,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Female/New/ckmk_a_ict_f_n_178108.wav"}}}