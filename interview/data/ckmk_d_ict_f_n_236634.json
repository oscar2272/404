{"version":"1.0","dataSet":{"info":{"date":"20230116","occupation":"ICT","channel":"MOCK","place":"ONLINE","gender":"FEMALE","ageRange":"35-44","experience":"NEW"},"question":{"raw":{"text":"좋은 코드란 어떤 것이라고 생각하는지 설명해 주시겠습니까","wordCount":7},"emotion":[],"intent":[]},"answer":{"raw":{"text":"제가 생각하는 좋은 코드란 어 모두에게 좋은 코드는 기준이 조금씩 다르고 정의도 다른 것 같습니다. 하지만 제가 생각하는 좋은 코드는 가독성이 좋은 코드이고 중복이 없는 코드이며 테스트에 용이한 코드인 것 같습니다. 가독성이 좋은 코드란 한 번만 코드를 짜고 다시는 보지 않을 거라면 사실 가독성은 크게 중요하지 않습니다. 하지만 현실은 그렇지 않습니다. 현실도 없 셀 수도 없이 많은 오류는 물론 유지 보수를 해야 하기 때문에 코드는 언제 누가 봐도 이해하기 쉽고 간결하고 가독성이 좋은 코드가 좋습니다. 어 가독성에는 두 가지 종류가 있습니다. 표현적 가독성 눈에 잘 들어오고 읽기 편한 코드를 말하며 기능적 가독성 함수 변수 클래스 등이 어떤 역할을 가지고 어떤 동작을 하며 어떤 관계를 맺고 있는지 직관적으로 파악 가능한 코드를 말합니다. 어 그리고 중복이 없는 코드는 많이들 중복 코드가 나쁘다고 말을 하지만 중복은 자주 일어납니다. 중복을 같은 기능을 하는 여러 줄의 코드로 재사용 가능하게 만드는 것이 중요합니다. 물론 중복이 나쁘다는 것은 아닙니다. 그리고 테스트에 용이한 코드는 테스트 코드는 중요합니다.테스트를 통해 심리적인 안정감도 생기고 자신감도 생깁니다. 처음에 프로그램을 설계할 때부터 테스트 가능성을 열어 두고 코드를 서로 연결하기 전에 코드를 하나하나 테스트해야 합니다. 그리고 일관성 있는 코드입니다. 최소한 가독성을 보장하는 방법 중 하나로 일관성을 유지하며 코드를 짜는 것입니다. 그리고 확장성이 좋은 코드입니다. 확장이 어려운 코드는 내부에서 많은 변경이 발생하며 이것은 코드를 읽기 어렵게 만들어 자연스러운 생산성이 떨어지기 때문입니다.","wordCount":206},"emotion":[],"intent":[{"text":"","expression":"","category":"attitude"}],"summary":{"text":"제가 생각하는 좋은 코드는 가독성이 좋은 코드이고 중복이 없는 코드이며 테스트에 용이한 코드인 것 같습니다. 그리고 테스트 코드는 중요합니다.테스트를 통해 심리적인 안정감도 생기고 자신감도 생깁니다. 그리고 일관성 있는 코드입니다. 그리고 확장성 좋은 코드 입니다.","wordCount":34}}},"rawDataInfo":{"question":{"fileFormat":"wav","fileSize":243278,"duration":7600,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Female/New/ckmk_q_ict_f_n_236634.wav"},"answer":{"fileFormat":"wav","fileSize":3720398,"duration":116260,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Female/New/ckmk_a_ict_f_n_236634.wav"}}}