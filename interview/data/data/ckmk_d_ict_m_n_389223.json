{"version":"1.0","dataSet":{"info":{"date":"20230116","occupation":"ICT","channel":"MOCK","place":"ONLINE","gender":"MALE","ageRange":"55-","experience":"NEW"},"question":{"raw":{"text":"솔리드 즉 에스오엘아이디 이라고 있는데 이것에 대해서 설명을 좀 간략하게 해 주시기 바랍니다","wordCount":13},"emotion":[],"intent":[]},"answer":{"raw":{"text":"에스오엘아이디 원칙이란 이게 이제 나온 배경을 이야기하자면 어 천 구백 구십 년대 이전의 개발자는 하드웨어로부터 소프트웨어의 제약 사항 때문에 유지 보수성이 높은 코드보다는 기기 입장에서 효율적인 코드를 선호하는 추세였습니다. 어 하지만 어 무의 법칙이 나올 정도로 하드웨어가 끊임없이 발전하고 프로그래머가 소프트웨어를 키우는 속도보다 하드웨어의 발전 속도가 더 빨라지게 되었죠. 어 그래서 개발자는 하드웨어로 인한 제약 사항에서 어느 정도 벗어나게 되었고 어 즉 다시 말해서 어 이제는 기기 입장에서 효율적인 코드가 아닌 유지 보수성 재가용성 이 높은 코드 등에 관련된 어 패러다임이나 원칙 어 또한 끊임없이 나오게 되었습니다. 어 오오피에 관련된 유용한 원칙 중에 이천 년 대까지 사용함 원칙들 중에 명칭되는 게 에스오엘아이디 원칙입니다. 어 객체 지향 프로그래밍 및 객체 지향 설계에 관련된 다섯 가지 기본 원칙을 뜻하죠. 어 첫 번째 단일 책임 원칙 어 단일 모듈은 변경의 이유가 하나 오직 하나 뿐이어야 된다 그리고 어 개방 폐쇄 원칙 어 리스코프 치환 원칙 그리고 인터페이스 분리 원칙 어 그리고 의존성 역전 원칙 이와 같이 다섯 가지 원칙을 어 으로 이 프로그램래 프로그램에 대한 어 유연성을 가지고 있습니다.","wordCount":166},"emotion":[],"intent":[{"text":"","expression":"","category":"attitude"}],"summary":{"text":"에스오엘아이디 원칙은 천 구백 90 년대 이전에는 하드웨어의 제약으로 유지 보수성이 높은 코드보다 기기 입장에서 효율적인 코드를 선호했습니다. 하지만 하드웨어가 끊임없이 발전하고 프로그래머가 소프트웨어를 키우는 속도보다 하드웨어의 발전 속도가 더 빨라지면서 하드웨어로 인한 제약 사항에서 어느 정도 벗어나게 되었고 어 이러한 패러다임이나 원칙 또한 끊임없이 나오게 되었습니다.","wordCount":47}}},"rawDataInfo":{"question":{"fileFormat":"wav","fileSize":478158,"duration":14940,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Male/New/ckmk_q_ict_m_n_389223.wav"},"answer":{"fileFormat":"wav","fileSize":3851278,"duration":120350,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Male/New/ckmk_a_ict_m_n_389223.wav"}}}