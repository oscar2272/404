{
    "version": "1.0",
    "dataSet": {
        "info": {
            "date": "20230116",
            "occupation": "ICT",
            "channel": "MOCK",
            "place": "ONLINE",
            "gender": "FEMALE",
            "ageRange": "-34",
            "experience": "NEW"
        },
        "question": {
            "raw": {
                "text": "오브젝트 오리엔테이션 프로그래밍에 관해서 설명해 주실 수 있나요",
                "wordCount": 8
            },
            "emotion": [],
            "intent": []
        },
        "answer": {
            "raw": {
                "text": "이제 객체지향 프로그래밍이라는 것은 컴퓨터 프로그래밍 패러다임 중 하나로 프로그래밍에서 필요한 데이터를 추상화 시켜서 상태와 행위를 가진 객체를 만들고 그 객체들 간의 유기적인 상호 작용을 통해 로직을 구성하는 프로그래밍 방법을 말합니다. 어 객체지향 프로그래밍의 장단점은 여러 가지가 있는데요. 일단 장점에 대해서 설명을 드리자면은 코드의 재 사용이 굉장히 용이합니다. 남이 만든 클래스를 가져와서 이용할 수 있고 상속을 통해 확장할 수도 있기 때문에 어 굉장히 용이하고요. 유지 보수가 쉬워집니다. 절차 지형 프로그래밍에서는 코드를 수정해야 할 때 일일이 찾아 수정해야 하는 반면에 객체 지향 프로그래밍에서는 수정해야 할 부분이 클래스 내부의 멤버 변수 혹은 메소드로 존재하기 때문에 해사 부분만 수정하면 됩니다. 하지만 단점은 처리 속도가 상대적으로 느릴 수 있고 객체가 많으면 용량이 커질 수 있으며 설계 시 많은 시간과 노력이 필요합니다.",
                "wordCount": 116
            },
            "emotion": [
                {
                    "text": "이제 객체지향 프로그래밍이라는 것은 컴퓨터 프로그래밍 패러다임 중 하나로 프로그래밍에서 필요한 데이터를 추상화 시켜서 상태와 행위를 가진 객체를 만들고 그 객체들 간의 유기적인 상호 작용을 통해 로직을 구성하는 프로그래밍 방법을 말합니다.",
                    "expression": "u-fact",
                    "category": "neutral"
                }
            ],
            "intent": [
                {
                    "text": "일단 장점에 대해서 설명을 드리자면은 코드의 재 사용이 굉장히 용이합니다.",
                    "expression": "i_prg",
                    "category": "technology"
                },
                {
                    "text": "하지만 단점은 처리 속도가 상대적으로 느릴 수 있고 객체가 많으면 용량이 커질 수 있으며 설계 시 많은 시간과 노력이 필요합니다.",
                    "expression": "i_prg",
                    "category": "technology"
                }
            ],
            "summary": {
                "text": "객체지향 프로그래밍은 데이터를 추상화 시켜 상태와 행위를 가진 객체를 만들고 그것들 간의 유기적인 상호 작용을 통해 로직을 구성합니다. 이것은 코드의 재사용이 용이하고 유지 보수가 쉽습니다. 하지만 처리 속도가 느릴 수 있고 객체가 많으면 용량이 커질 수 있습니다.",
                "wordCount": 37
            }
        }
    },
    "rawDataInfo": {
        "question": {
            "fileFormat": "wav",
            "fileSize": 221518,
            "duration": 6920,
            "samplingBit": 16,
            "channelCount": 1,
            "samplingRate": "16kHz",
            "audioPath": "/Mock/05.ICT/Female/New/ckmk_q_ict_f_n_392259.wav"
        },
        "answer": {
            "fileFormat": "wav",
            "fileSize": 1913678,
            "duration": 59800,
            "samplingBit": 16,
            "channelCount": 1,
            "samplingRate": "16kHz",
            "audioPath": "/Mock/05.ICT/Female/New/ckmk_a_ict_f_n_392259.wav"
        }
    }
}