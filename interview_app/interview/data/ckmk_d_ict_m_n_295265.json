{"version":"1.0","dataSet":{"info":{"date":"20230116","occupation":"ICT","channel":"MOCK","place":"ONLINE","gender":"MALE","ageRange":"-34","experience":"NEW"},"question":{"raw":{"text":"작업을 하실 때에 테스트를 하게 되는데 지원자님께서는 테스트하기 쉬운 코드는 어떤 코드인지 이유와 함께 말씀해 주시겠습니까","wordCount":16},"emotion":[],"intent":[]},"answer":{"raw":{"text":"테스트하기에 가장 쉬운 코드는 그런 거는 없지 않을까 생각합니다. 그나마 리소스가 적게 들어가는 것 첫 번째로 떠올랐던 것은 중요도에 따라서 중요도가 낮으면 테스트가 쉽나 라고 생각을 했었는데 오히려 중요도가 높을수록 또 테스트에 꼼꼼하게 진지하게 임할 것이기 때문에 그만큼 테스트에 수월하다 라고 말할 수도 있을 것 같아서 쉽다 라고 말씀드리려면 리소스가 적은 것 그것이 가장 쉽다 라는 말에 부합하지 않을까 싶습니다. 현재로서는 테스트 하기 더 쉬운 코드라는 것은 실은 잘 떠오르지는 않는데 리소스가 적으면 그나마 네 좀 그렇다는 것 테스트를 만약에 리소스가 많이 들어가는 것으로 예를 들면 천 명한테 테스트를 해 봐야 그 테스트가 테스트의 효력이 생긴다 라고 한다면 그것은 리소스가 많이 들어가기 때문에 한 번 테스트하기 힘들다 라고 말씀드릴 수 있을 것 같습니다. 그러한 식으로 먼저 떠오르는 것은 리소스의 양 일 것 같습니다.","wordCount":123},"emotion":[],"intent":[{"text":"","expression":"","category":"attitude"}],"summary":{"text":"테스트하기 가장 쉬운 코드는 리소스의 양 일 것 같습니다. 중요도에 따라 중요도가 낮으면 테스트가 쉽나 라는 생각을 했었는데, 중요도는 높을수록 꼼꼼하게 임할 것이기 때문에 그만큼 테스트에 수월하다 라고 말할 수도 있을 것 같아서 리소스가 적은 것이 가장 쉽다 라는 말에 부합하지 않을까 생각합니다.","wordCount":43}}},"rawDataInfo":{"question":{"fileFormat":"wav","fileSize":385678,"duration":12050,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Male/New/ckmk_q_ict_m_n_295265.wav"},"answer":{"fileFormat":"wav","fileSize":2777678,"duration":86800,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Male/New/ckmk_a_ict_m_n_295265.wav"}}}