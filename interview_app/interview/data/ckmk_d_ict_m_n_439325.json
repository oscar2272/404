{"version":"1.0","dataSet":{"info":{"date":"20230116","occupation":"ICT","channel":"MOCK","place":"ONLINE","gender":"MALE","ageRange":"-34","experience":"NEW"},"question":{"raw":{"text":"버전 관리 시스템은 무엇을 사용해 보셨는지 말씀해 주시겠습니까","wordCount":8},"emotion":[],"intent":[]},"answer":{"raw":{"text":"버전 관리의 시스템은 크게 세 개로 나뉩니다. 로컬 브이씨에스 중앙 집중식 브이씨에스 그리고 분산 브이씨에스 인데요. 저는 이 중에서 중앙집중식 브이씨에스 와 분산 브이씨에스를 사용해 본 경험이 있습니다. 우선 중앙집중식 브이씨에스는 써버의 최종본 한 벌이 있으며 사용자들은 이 중 수정을 원하는 파일만 로컬에 받아서 수정한 후에 써버에 올리게 되는 형식입니다. 간단한 방법으로 협업이 가능하고 또 관리자가 누가 어떤 일을 하고 있는지 알기 쉽다는 장점이 있어서 제가 써봤던 경험이 있는데요. 단 중앙 서버가 다운될 경우에는 그동안은 업무가 마비된다는 큰 단점이 있습니다. 그리고 써버의 정보가 날아갈 경우에는 모든 히스토락 모든 히스토리가 날아가게 된다는 단점도 있습니다. 그래서 협업의 규모가 커지게 되면 수정 수정 충돌 문제 등이 발생할 수 있습니다. 이러한 문제들이 있었기 때문에 저는 기존에 쓰던 중앙 집중식 브이씨에스에서 분산 브이씨에스를 쓰게 되었는데요. 분산 브이씨에스는 파일를 저장하는 서버가 있는 것은 동일하지만 이 수정을 위해 프로젝트 전체를 로컬에 다운 받은 뒤에 수정하는 형식입니다. 이 분산 브이씨에스는 중앙 써버가 다운되더라도 개별 사용자들은 작업이 가능하고 또 써버가 날아가도 다운받은 내용은 남아있기 때문에 가장 안정적인 버전 관리 시스템이라고 할 수 있습니다. 수정시에서도 현재 코드는 나 혼자 수정하고 있기 때문에 충돌의 염려 없이 수정할 수 있으며 최종적으로 써버에 올릴 때만 신경써서 머지 해주면 된다는 장점이 있습니다.","wordCount":188},"emotion":[],"intent":[{"text":"","expression":"","category":"attitude"}],"summary":{"text":"버전 관리의 시스템 중 중앙집중식 브이씨에스는 사용자들이 수정을 원하는 파일만 로컬에 받아서 수정한 후에 써버에 올리게 되는 형식입니다. 협업의 규모가 커지게 되면 수정 충돌 문제 등이 발생할 수 있기 때문에 분산 브이씨에스를 쓰게 되었습니다. 중앙 써버가 다운되더라도 개별 사용자들은 작업이 가능하고 다운받은 내용은 남아있기 때문에 가장 안정적인 버전 관리 시스템이라고 할 수 있습니다.","wordCount":53}}},"rawDataInfo":{"question":{"fileFormat":"wav","fileSize":241358,"duration":7540,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Male/New/ckmk_q_ict_m_n_439325.wav"},"answer":{"fileFormat":"wav","fileSize":3717198,"duration":116160,"samplingBit":16,"channelCount":1,"samplingRate":"16kHz","audioPath":"/Mock/05.ICT/Male/New/ckmk_a_ict_m_n_439325.wav"}}}